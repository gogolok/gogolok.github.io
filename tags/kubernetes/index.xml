<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on gogolok</title>
    <link>https://gogolok.github.io/tags/kubernetes/</link>
    <description>Recent content in Kubernetes on gogolok</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 25 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://gogolok.github.io/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes: Finalizers and Custom Controllers</title>
      <link>https://gogolok.github.io/posts/kubernetes-finalizers-and-custom-controllers/</link>
      <pubDate>Sun, 25 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gogolok.github.io/posts/kubernetes-finalizers-and-custom-controllers/</guid>
      <description>Authors Matthew Doherty Philipp Kuntz Robert Gogolok Introduction In the last blog post we provided an introduction to Kubernetes Finalizers.
In the introduction we covered the basic mechanics of how finalizers allow controllers to implement asynchronous pre-delete hooks. Simply put they inform the Kubernetes control plane that an action needs to take place before Kubernetes garbage collection logic can be performed.
https://unsplash.com/@frankiefoto In this blog post we take finalizers a step further by performing the resulting actions of a resource deletion with the help of a custom controller.</description>
    </item>
    
    <item>
      <title>Kubernetes: Finalizers in Custom Resources</title>
      <link>https://gogolok.github.io/posts/kubernetes-finalizers-in-custom-resources/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gogolok.github.io/posts/kubernetes-finalizers-in-custom-resources/</guid>
      <description>Authors Matthew Doherty Philipp Kuntz Robert Gogolok Introduction When extending the Kubernetes API with CustomResourceDefinitions youâ€™ll come across the dilemma to clean up external resources when deleting a custom resource. Although you can create a custom resource simply to store and retrieve structured data, most of the time there is some entity involved, like custom controllers . The controller will manage this resource and create other external resources to handle the semantics of that resource.</description>
    </item>
    
  </channel>
</rss>
